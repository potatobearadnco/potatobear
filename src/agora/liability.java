package agora;
 /* Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author Lou
 */
import agora.db;
import agora.sale;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.math.BigInteger;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import com.mysql.cj.jdbc.ConnectionImpl;
import java.text.SimpleDateFormat;


public class liability extends javax.swing.JPanel {

    /**
     * Creates new form liability
     */
    public liability() {
        initComponents();
        tb_load();
        populateEmployeeTable(jTableLiability);
    }

    
    public void tb_load(){


    }

        public Vector<Vector<String>> getUnpaidPartialData() {
    Vector<Vector<String>> data = new Vector<>();
    try {
        java.sql.Statement s = db.mycon().createStatement();
        ResultSet rs = s.executeQuery("SELECT Customer_Name, Balance, Status FROM sales WHERE Status IN ('Unpaid!', 'Partial')");
        while (rs.next()) {
            Vector<String> row = new Vector<>();
            row.add(rs.getString("Customer_Name"));
            row.add(rs.getString("Balance"));
            row.add(rs.getString("Status"));
            data.add(row);
        }
    } catch (SQLException e) {
        System.out.println(e);
    }
    return data;


    }


        public static void populateEmployeeTable(JTable jTableEmployee) {
        DefaultTableModel model = (DefaultTableModel) jTableEmployee.getModel();
        model.setRowCount(0); // Clear existing data

        sale salesInstance = new sale(); // Instantiate the sale class
        Vector<Vector<String>> unpaidPartialData = salesInstance.getUnpaidPartialData(); // Get unpaid and partial sales data

        // Add data to the table model
        for (Vector<String> row : unpaidPartialData) {
            model.addRow(row);
        }
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        c_name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel7 = new javax.swing.JPanel();
        c_change = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLiability = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Enter Amount");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        c_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_nameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Customer Name:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Select Date:");

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        c_change.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        c_change.setText("00.00");
        c_change.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Change:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(c_change, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(c_change))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(c_name)
                            .addComponent(jLabel3)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(c_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jTableLiability.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customer Name", "Balance", "Status"
            }
        ));
        jTableLiability.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLiabilityMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableLiability);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(96, 96, 96))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          // TODO add your handling code here:                
        
     try {
    ConnectionImpl connection = (ConnectionImpl) db.mycon(); // Obtain the connection

    // Get the selected row index
    int selectedRowIndex = jTableLiability.getSelectedRow();

    // Check if a row is selected
    if (selectedRowIndex != -1) {
        // Get the customer name and balance from the selected row in the table
        String customerName = jTableLiability.getValueAt(selectedRowIndex, 0).toString();
        double balance = Double.parseDouble(jTableLiability.getValueAt(selectedRowIndex, 1).toString()); // Assuming balance is in the second column (index 1)

        // Prompt the user to input the amount
        String input = JOptionPane.showInputDialog("Please input the amount to process payment:");

        // Check if input is provided and is a valid number
        if (input != null && input.matches("-?\\d+(\\.\\d+)?")) {
            double paymentAmount = Double.parseDouble(input);

            if (paymentAmount >= Math.abs(balance)) { // Check if the payment amount is greater than or equal to the absolute value of the balance
                double change = paymentAmount - Math.abs(balance);

                // Update the c_change JLabel with the calculated change
                c_change.setText(String.format("%.2f", change));

                // Prepare the SQL UPDATE statement
                String query = "UPDATE sales SET Balance = 0.0, Status = 'Paid!', DateofPayment = ";

                // Get the current date from the date picker
                java.util.Date dateSelected = jDateChooser1.getDate(); // Replace "jDateChooser1" with the actual name of your date picker component

                // Check if a date is selected
                if (dateSelected != null) {
                    java.sql.Date sqlDate = new java.sql.Date(dateSelected.getTime());

                    // Format the date to be used in the SQL query
                    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                    String formattedDate = "'" + dateFormat.format(sqlDate) + "'";

                    // Include the formatted date in the SQL query
                    query += formattedDate;
                } else {
                    // If no date is selected, set DateofPayment to NULL
                    query += "NULL";
                }

                // Add the WHERE clause to update only the selected row
                query += " WHERE Customer_Name = ? AND Balance = ?";

                // Prepare the statement
                java.sql.PreparedStatement preparedStatement = connection.prepareStatement(query);
                preparedStatement.setString(1, customerName); // Set the customer name obtained from the selected row
                preparedStatement.setDouble(2, balance); // Set the balance obtained from the selected row

                // Execute the update
                int rowsAffected = preparedStatement.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(null, "Payment Processed Successfully");

                    // Reload data in your table
                    tb_load();
                } else {
                    JOptionPane.showMessageDialog(null, "No rows updated");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Payment amount doesn't cover the balance.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid input. Please provide a valid numeric amount.");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select a row to process payment");
    }
} catch (SQLException e) {
    System.out.println(e);
}
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTableLiabilityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLiabilityMouseClicked
        // TODO add your handling code here:
        
        // Get the selected row index
    int selectedRowIndex = jTableLiability.getSelectedRow();

    // Check if a row is selected
    if (selectedRowIndex != -1) {
        // Get the values from the selected row
        String nam = jTableLiability.getValueAt(selectedRowIndex, 0).toString();
        String bal = jTableLiability.getValueAt(selectedRowIndex, 1).toString();
        String stat = jTableLiability.getValueAt(selectedRowIndex, 2).toString();

        // Set the values to the text fields
        
        c_name.setText(nam);
        
        
        
        
    }   
    }//GEN-LAST:event_jTableLiabilityMouseClicked

    private void c_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_nameActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        tb_load();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel c_change;
    private javax.swing.JTextField c_name;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableLiability;
    // End of variables declaration//GEN-END:variables
}
